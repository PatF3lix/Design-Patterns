				Flyweight Design Pattern
					Implimentation
					
		Intrinsic State Definition: 
			- intrinsic state is state that represents the essential data of an object, such as character content.
			- intrinsic - state that naturally belongs to the 'FlyWeight' 
				object and thus should be permanent or immutable (internal) or context free.
	
		Extrinsic State Definition
			- state that belongs to the context of the object (external) or unique to that instance.:
			- extrinsic state are variants applied to the object with its intrinsic date / essential date, such as styling.
		
		What is intrinsic vs extrinsic?
		
			- The intrinsic value of something is said to be the value that that thing has “in itself,”
				or “for its own sake,” or “as such,” or “in its own right.”
				Extrinsic value is value that is not intrinsic.
				Many philosophers take intrinsic value to be crucial to a variety of moral judgments.
	
		Participants
	
	- Flyweight
		- Declares an interface through which flyweights can receive and act on extrinsic state.
		
	- ConcreteFlyweight
		- Implements the Flyweight interface and adds storage (if any).
		- Must be sharable.
		- Any state it stores must be intrinsic.
			- Must be independent of the ConcreteFlyweight objects context.
			
	- UnsharedConcreteFlyweight
	
		- Not all Flyweight subclasses need to be shared.
		- The Flyweight interface enables sharing; it doesn't enforce it.
		- Common for UnsharedConcreteFlyweight objects to have ConcreteFlyweight objects as children.
			- At some level in the flyweight object structure.
	
	- FlyweightFactory
	
		- Creates and manages flyweight objects.
		- Ensures that flyweights are shared properly.
		- When a client requests a flyweight, the flyweightFactory object supplies an existing instance or creates
			one, if none exists.
	
	- Client 
		- Maintains a reference to flyweight(s).
		- Computes or stores the extrinsic state of flyweight(s).
		
		Collaborations
		
	- State that a flyweight needs to function must be characterized as either intrinsic or extrinsic.
	
	- intrinsic state is stored in the ConcreteFlyweight object.
	
	- Extrinsic state is stored or computed by Client objects.
		- Clients pass this state to the flyweight when they invoke its operations.
		
	- Clients should not instantiate ConcreteFlyweights directly.
		- Must obtain ConcreteFlyweight objects exclusively from the FlyweightFactory object to ensure
			they are shared properly.
		- Often use an associative store to let clients look up flyweights of interest.
		
		Implimentation Issues
		
	- Flyweight may introduce run-time costs associated with transferring, finding and/or computing
		extrinsic state.
		- Especially if it was formely stored as intrinsic state.
	
	- It is key to remove extrinsic state.
		- Pattern's applicability is determined largely by how easy it is to identify extinsic state and remove it
			from shared objects.
			
	- It is better to compute extrinsic states rather than storing them.
		- Saves a significant amount of memory.
		
	- The amount of intrinsic state per object also affects memory usage.
	
	- The more flyweight objects we can share the more memory we can save.
		- Will not help reduce storage costs if there are as many different kinds of extrinsic state.